/** @jsxImportSource @emotion/react */
import { css, keyframes } from "@emotion/react";
import { useEffect, useRef, useState } from "react";

const PATH_COMP: {
  d: string;
  fill?: string;
  stroke?: string;
  strokeWidth?: number | string;
}[] = [
  {
    d: "M183.42 190.5L265.42 209M183.42 190.5L221.92 129.5M183.42 190.5L215.42 244.5M265.42 209L338.92 258M265.42 209L221.92 129.5M265.42 209L284.92 140M265.42 209L330.42 169.5M265.42 209L215.42 244.5M265.42 209L276.92 290.5M338.92 258L411.42 307M338.92 258L276.92 290.5M338.92 258L324.92 304.5M338.92 258L358.92 351.5M338.92 258L358.92 216.5M338.92 258L330.42 169.5M338.92 258L405.92 211.5M411.42 307L465.92 263.5M411.42 307L358.92 351.5M411.42 307L471.92 318M411.42 307L441.92 358M411.42 307V382M411.42 307L405.92 211.5M465.92 263.5L502.42 232M465.92 263.5L513.92 283.5M465.92 263.5L471.92 318M465.92 263.5L405.92 211.5M465.92 263.5V213M502.42 232L465.92 213M502.42 232L513.92 283.5M465.92 213L494.92 182.5L443.92 172.5M465.92 213L405.92 211.5M221.92 129.5L297.42 80.5M221.92 129.5L284.92 140M297.42 80.5L284.92 140M297.42 80.5L334.92 103.5M284.92 140L334.92 103.5M284.92 140L330.42 169.5M334.92 103.5L368.92 77.5L397.92 131.5M334.92 103.5L397.92 131.5M334.92 103.5L330.42 169.5M397.92 131.5L330.42 169.5M397.92 131.5L441.42 95M397.92 131.5L405.92 211.5M397.92 131.5H443.92L482.42 139L443.92 172.5M397.92 131.5L443.92 172.5M330.42 169.5L405.92 211.5M215.42 244.5L193.92 312M215.42 244.5L276.92 290.5M193.92 312L276.92 290.5M193.92 312L267.92 359.5M193.92 312L213.42 369M276.92 290.5L267.92 359.5M276.92 290.5L358.92 351.5M267.92 359.5L242.92 421.5M267.92 359.5L213.42 369M267.92 359.5L312.92 409.5M267.92 359.5L358.92 351.5M242.92 421.5L213.42 369M242.92 421.5L312.92 409.5M242.92 421.5L276.92 458.5M242.92 421.5L234.92 470.5M312.92 409.5L276.92 458.5M312.92 409.5L307.92 488M312.92 409.5L350.92 465M312.92 409.5L394.42 444.5M312.92 409.5L349.42 407.5M312.92 409.5L358.92 351.5M276.92 458.5L307.92 488M276.92 458.5L256.92 494M276.92 458.5L234.92 470.5M307.92 488L256.92 494M307.92 488L292.92 529.5L256.92 494M307.92 488L341.92 521.5L394.42 444.5M307.92 488L350.92 465M350.92 465L394.42 444.5M350.92 465L399.42 521.5L394.42 444.5M256.92 494L234.92 470.5M394.42 444.5L437.42 488L444.42 421M394.42 444.5L358.92 351.5M394.42 444.5L411.42 382M394.42 444.5L444.42 421M358.92 351.5L374.92 301L384.92 263.5L405.92 211.5M358.92 351.5L411.42 382M411.42 382L444.42 421M444.42 421L481.42 455M444.42 421L481.42 348L525.92 344L471.92 318M471.92 318L513.92 283.5M405.92 211.5L443.92 172.5",
    stroke: "white",
    strokeWidth: "4",
  },
];

const HomoDatarism = ({ fill = "none", width = 615, height = 615 }) => {
  const pathsRef = useRef<Array<SVGPathElement | null>>([]);
  const [pathLengths, setPathLengths] = useState<number[]>([]);

  const createMaskMove = (distance: string) => {
    return keyframes`
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(${distance});
    }
  `;
  };

  const sparkle = keyframes`
  0% { opacity: 0.8; }
  25% { opacity: 0.1; }
  50% { opacity: 1; }
  75% { opacity: 0.3; }
  100% { opacity: 0.9; }
`;

  // 랜덤 duration과 delay를 위한 헬퍼
  const getRandomBlinkStyle = () => {
    const duration = (Math.random() * 2 + 1).toFixed(2); // 1 ~ 3초
    const delay = (Math.random() * 2).toFixed(2); // 0 ~ 2초

    return css`
      animation: ${sparkle} ${duration}s infinite;
      animation-delay: ${delay}s;
    `;
  };

  const CIRCLES = [
    { cx: "340.92", cy: "520.5", r: "12.5", fill: "white" },
    { cx: "399.92", cy: "521.5", r: "12.5", fill: "white" },
    { cx: "436.92", cy: "487.5", r: "12.5", fill: "white" },
    { cx: "480.92", cy: "454.5", r: "12.5", fill: "white" },
    { cx: "444.42", cy: "420", r: "11", fill: "white" },
    { cx: "394.42", cy: "444", r: "11", fill: "white" },
    { cx: "350.92", cy: "465.5", r: "9.5", fill: "white" },
    { cx: "307.42", cy: "487", r: "12", fill: "white" },
    { cx: "292.92", cy: "529.5", r: "8.5", fill: "white" },
    { cx: "275.92", cy: "458.5", r: "9.5", fill: "white" },
    { cx: "257.42", cy: "493", r: "9", fill: "white" },
    { cx: "234.42", cy: "470", r: "8", fill: "white" },
    { cx: "312.42", cy: "409", r: "11", fill: "white" },
    { cx: "358.92", cy: "351.5", r: "11.5", fill: "white" },
    { cx: "412.92", cy: "381.5", r: "11.5", fill: "white" },
    { cx: "411.92", cy: "306.5", r: "11.5", fill: "white" },
    { cx: "464.92", cy: "262.5", r: "11.5", fill: "white" },
    { cx: "405.92", cy: "211.5", r: "11.5", fill: "white" },
    { cx: "443.42", cy: "172", r: "10", fill: "white" },
    { cx: "501.92", cy: "230.5", r: "11.5", fill: "white" },
    { cx: "493.92", cy: "182.5", r: "10.5", fill: "white" },
    { cx: "462.92", cy: "211.5", r: "9.5", fill: "white" },
    { cx: "471.92", cy: "317.5", r: "9.5", fill: "white" },
    { cx: "441.92", cy: "357.5", r: "9.5", fill: "white" },
    { cx: "349.92", cy: "407.5", r: "9.5", fill: "white" },
    { cx: "324.92", cy: "304.5", r: "9.5", fill: "white" },
    { cx: "358.92", cy: "216.5", r: "9.5", fill: "white" },
    { cx: "263.92", cy: "208.5", r: "10.5", fill: "white" },
    { cx: "276.92", cy: "290.5", r: "10.5", fill: "white" },
    { cx: "338.92", cy: "256.5", r: "10.5", fill: "white" },
    { cx: "266.92", cy: "359.5", r: "10.5", fill: "white" },
    { cx: "194.92", cy: "311.5", r: "10.5", fill: "white" },
    { cx: "214.92", cy: "244.5", r: "10.5", fill: "white" },
    { cx: "214.92", cy: "244.5", r: "10.5", fill: "white" },
    { cx: "182.92", cy: "189.5", r: "10.5", fill: "white" },
    { cx: "222.92", cy: "128.5", r: "10.5", fill: "white" },
    { cx: "284.92", cy: "139.5", r: "10.5", fill: "white" },
    { cx: "296.92", cy: "80.5", r: "10.5", fill: "white" },
    { cx: "242.92", cy: "420.5", r: "10.5", fill: "white" },
    { cx: "213.42", cy: "368", r: "10", fill: "white" },
    { cx: "377.92", cy: "171.5", r: "9.5", fill: "white" },
    { cx: "368.92", cy: "77.5", r: "9.5", fill: "white" },
    { cx: "402.42", cy: "92", r: "8", fill: "white" },
    { cx: "355.42", cy: "133", r: "8", fill: "white" },
    { cx: "444.42", cy: "131", r: "8", fill: "white" },
    { cx: "479.42", cy: "99", r: "7", fill: "white" },
    { cx: "540.42", cy: "164", r: "8", fill: "white" },
    { cx: "517.92", cy: "134.5", r: "6.5", fill: "white" },
    { cx: "521.92", cy: "208.5", r: "6.5", fill: "white" },
    { cx: "542.92", cy: "213.5", r: "6.5", fill: "white" },
    { cx: "546.42", cy: "247", r: "7", fill: "white" },
    { cx: "556.42", cy: "312", r: "7", fill: "white" },
    { cx: "552.92", cy: "283.5", r: "5.5", fill: "white" },
    { cx: "510.92", cy: "109.5", r: "4.5", fill: "white" },
    { cx: "430.92", cy: "262.5", r: "7.5", fill: "white" },
    { cx: "374.92", cy: "300.5", r: "7.5", fill: "white" },
    { cx: "384.92", cy: "262.5", r: "9.5", fill: "white" },
    { cx: "480.92", cy: "138.5", r: "11.5", fill: "white" },
    { cx: "441.92", cy: "94.5", r: "11.5", fill: "white" },
    { cx: "397.92", cy: "131.5", r: "11.5", fill: "white" },
    { cx: "330.92", cy: "169.5", r: "11.5", fill: "white" },
    { cx: "333.92", cy: "105.5", r: "11.5", fill: "white" },
    { cx: "512.92", cy: "282.5", r: "11.5", fill: "white" },
    { cx: "525.92", cy: "343.5", r: "11.5", fill: "white" },
    { cx: "481.92", cy: "348.5", r: "9.5", fill: "white" },
    { cx: "481.92", cy: "402.5", r: "7.5", fill: "white" },
    { cx: "519.92", cy: "402.5", r: "7.5", fill: "white" },
    { cx: "554.42", cy: "424", r: "4", fill: "white" },
    { cx: "530.92", cy: "459.5", r: "6.5", fill: "white" },
    { cx: "485.92", cy: "502.5", r: "7.5", fill: "white" },
    { cx: "452.42", cy: "534", r: "7", fill: "white" },
    { cx: "520.42", cy: "492", r: "6", fill: "white" },
  ];

  useEffect(() => {
    if (pathsRef.current.length) {
      const lengths = pathsRef.current.map(
        (path) => path?.getTotalLength() || 0
      );
      setPathLengths(lengths);
    }
  }, []);

  return (
    <svg
      width={width}
      height={height}
      viewBox="0 0 615 615"
      fill={fill}
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        css={css`
          transform: translateX(0);
          animation: ${createMaskMove("0px")} 2s ease forwards;
        `}
        d="M255.92 90.5C270.834 80.6938 287.436 71.0009 297.429 81.0006C307.562 91.1398 301.936 108.501 312.429 114.501C319.71 118.664 327.823 107.323 331.929 105.501C336.436 103.501 321.959 118.251 319.929 128.001C317.535 139.501 332.863 161.501 331.929 169.001C331.057 176.001 315.429 195.001 315.429 201.501C315.429 205.606 319.837 206.896 319.929 211.001C320.053 216.525 314.018 217.708 312.429 223.001C310.328 230.001 341.04 250.001 339.429 257.501C337.818 265.001 319.922 270.501 315.429 281.001C310.936 291.501 308.074 301.522 312.429 313.501C314.374 318.851 322.923 321.159 319.929 326.001C313.436 336.501 312.429 334 300.929 342.5C297.418 345.096 293.907 334.307 290.929 337.5C283.936 345 284.436 347.5 280.929 353.5C274.473 364.546 305.703 351.618 312.429 362.5C318.92 373.002 314.42 389.502 310.92 385.502C302.945 376.388 298.92 380.51 292.92 384.502C276.957 395.122 280.929 401.502 275.436 409C263.719 424.996 242.596 407.926 243.429 420.5C244.92 443.002 266.795 470.364 266.92 478.502C267.42 511.002 275.436 503.428 266.92 512.002C256.987 522.002 250.26 528.393 246.42 532.002C241.914 536.237 251.42 522.5 255.92 515.002C257.628 508.26 249.362 507.502 244.92 507.502C230.42 514.002 238.411 541.502 232.92 543C227.429 544.498 222.547 550.44 220.92 548C215.92 540.502 223.967 540.071 213.92 525C210.92 520.5 207.42 507.002 195.92 495.5C186.64 486.219 174.82 491.94 165.42 495.5C156.02 499.061 126.106 509.059 117.42 504C111.411 500.5 102.911 495.5 104.42 480.5C105.52 469.563 105.885 466.5 107.929 452.5C108.505 448.554 97.5935 447.882 94.4292 442C92.7009 438.788 91.9117 436.648 91.9292 433C91.9522 428.178 96.4292 421.5 96.4292 421.5C96.4292 421.5 86.2409 416.487 86.9292 411C87.5915 405.72 88.3612 400.767 89.0953 396.5C90.5857 387.836 91.9292 382 91.9292 382C91.9292 382 83.976 373.971 73.9352 373C58.42 371.5 51.0707 361 53.4342 357.5C65.6957 339.342 73.6381 324.555 90.9434 292.335L91.9292 290.5C98.7539 277.794 103.419 276.912 90.4363 251C87.4312 245.002 90.2841 228.447 94.4292 216.001C104.42 186 116.025 170.636 130.92 154.5C142.92 141.5 158.92 133.499 180.42 124C201.92 114.501 226.678 109.727 255.92 90.5Z"
        fill="url(#paint0_linear_3366_656)"
      />
      <path
        css={css`
          transform: translateX(0);
          animation: ${createMaskMove("15px")} 2s ease forwards;
        `}
        d="M255.92 89.7109C270.834 79.9047 287.436 70.2119 297.429 80.2115C307.562 90.3507 301.936 107.711 312.429 113.711C319.71 117.875 327.823 106.534 331.929 104.712C336.436 102.712 321.959 117.462 319.929 127.211C317.535 138.711 332.863 160.712 331.929 168.212C331.057 175.212 315.429 194.212 315.429 200.712C315.429 204.817 319.837 206.107 319.929 210.212C320.053 215.736 314.018 216.919 312.429 222.212C310.328 229.212 341.04 249.212 339.429 256.712C337.818 264.212 319.922 269.712 315.429 280.212C310.936 290.712 308.074 300.733 312.429 312.712C314.374 318.062 322.923 320.37 319.929 325.212C313.436 335.711 312.429 333.211 300.929 341.711C297.418 344.307 293.907 333.518 290.929 336.711C283.936 344.211 284.436 346.711 280.929 352.711C274.473 363.757 305.703 350.828 312.429 361.711C318.92 372.213 314.42 388.713 310.92 384.713C302.945 375.599 298.92 379.721 292.92 383.713C276.957 394.333 280.929 400.713 275.436 408.211C263.719 424.207 242.596 407.137 243.429 419.711C244.92 442.213 266.795 469.575 266.92 477.713C267.42 510.213 275.436 502.639 266.92 511.213C256.987 521.213 250.26 527.604 246.42 531.213C241.914 535.448 251.42 521.711 255.92 514.213C257.628 507.471 249.362 506.713 244.92 506.713C230.42 513.213 238.411 540.713 232.92 542.211C227.429 543.709 222.547 549.651 220.92 547.211C215.92 539.713 223.967 539.282 213.92 524.211C210.92 519.711 207.42 506.213 195.92 494.711C186.64 485.43 174.82 491.15 165.42 494.711C156.02 498.272 126.106 508.27 117.42 503.211C111.411 499.711 102.911 494.711 104.42 479.711C105.52 468.774 105.885 465.711 107.929 451.711C108.505 447.765 97.5935 447.093 94.4292 441.211C92.7009 437.999 91.9117 435.859 91.9292 432.211C91.9522 427.389 96.4292 420.711 96.4292 420.711C96.4292 420.711 86.2409 415.698 86.9292 410.211C87.5915 404.931 88.3612 399.978 89.0953 395.711C90.5857 387.047 91.9292 381.211 91.9292 381.211C91.9292 381.211 83.976 373.182 73.9352 372.211C58.42 370.711 51.0707 360.211 53.4342 356.711C65.6957 338.553 73.6381 323.766 90.9434 291.546L91.9292 289.711C98.7539 277.005 103.419 276.123 90.4363 250.211C87.4312 244.213 90.2841 227.658 94.4292 215.212C104.42 185.211 116.025 169.847 130.92 153.711C142.92 140.711 158.92 132.71 180.42 123.211C201.92 113.711 226.678 108.938 255.92 89.7109Z"
        fill="#868696"
      />
      <path
        css={css`
          transform: translateX(0);
          animation: ${createMaskMove("30px")} 2s ease forwards;
        `}
        d="M255.92 89.7109C270.834 79.9047 287.436 70.2119 297.429 80.2115C307.562 90.3507 301.936 107.711 312.429 113.711C319.71 117.875 327.823 106.534 331.929 104.712C336.436 102.712 321.959 117.462 319.929 127.211C317.535 138.711 332.863 160.712 331.929 168.212C331.057 175.212 315.429 194.212 315.429 200.712C315.429 204.817 319.837 206.107 319.929 210.212C320.053 215.736 314.018 216.919 312.429 222.212C310.328 229.212 341.04 249.212 339.429 256.712C337.818 264.212 319.922 269.712 315.429 280.212C310.936 290.712 308.074 300.733 312.429 312.712C314.374 318.062 322.923 320.37 319.929 325.212C313.436 335.711 312.429 333.211 300.929 341.711C297.418 344.307 293.907 333.518 290.929 336.711C283.936 344.211 284.436 346.711 280.929 352.711C274.473 363.757 305.703 350.828 312.429 361.711C318.92 372.213 314.42 388.713 310.92 384.713C302.945 375.599 298.92 379.721 292.92 383.713C276.957 394.333 280.929 400.713 275.436 408.211C263.719 424.207 242.596 407.137 243.429 419.711C244.92 442.213 266.795 469.575 266.92 477.713C267.42 510.213 275.436 502.639 266.92 511.213C256.987 521.213 250.26 527.604 246.42 531.213C241.914 535.448 251.42 521.711 255.92 514.213C257.628 507.471 249.362 506.713 244.92 506.713C230.42 513.213 238.411 540.713 232.92 542.211C227.429 543.709 222.547 549.651 220.92 547.211C215.92 539.713 223.967 539.282 213.92 524.211C210.92 519.711 207.42 506.213 195.92 494.711C186.64 485.43 174.82 491.15 165.42 494.711C156.02 498.272 126.106 508.27 117.42 503.211C111.411 499.711 102.911 494.711 104.42 479.711C105.52 468.774 105.885 465.711 107.929 451.711C108.505 447.765 97.5935 447.093 94.4292 441.211C92.7009 437.999 91.9117 435.859 91.9292 432.211C91.9522 427.389 96.4292 420.711 96.4292 420.711C96.4292 420.711 86.2409 415.698 86.9292 410.211C87.5915 404.931 88.3612 399.978 89.0953 395.711C90.5857 387.047 91.9292 381.211 91.9292 381.211C91.9292 381.211 83.976 373.182 73.9352 372.211C58.42 370.711 51.0707 360.211 53.4342 356.711C65.6957 338.553 73.6381 323.766 90.9434 291.546L91.9292 289.711C98.7539 277.005 103.419 276.123 90.4363 250.211C87.4312 244.213 90.2841 227.658 94.4292 215.212C104.42 185.211 116.025 169.847 130.92 153.711C142.92 140.711 158.92 132.71 180.42 123.211C201.92 113.711 226.678 108.938 255.92 89.7109Z"
        fill="#C3C0C0"
      />
      <path
        css={css`
          transform: translateX(0);
          animation: ${createMaskMove("45px")} 2s ease forwards;
        `}
        d="M255.92 89.7109C270.834 79.9047 287.436 70.2119 297.429 80.2115C307.562 90.3507 301.936 107.711 312.429 113.711C319.71 117.875 327.823 106.534 331.929 104.712C336.436 102.712 321.959 117.462 319.929 127.211C317.535 138.711 332.863 160.712 331.929 168.212C331.057 175.212 315.429 194.212 315.429 200.712C315.429 204.817 319.837 206.107 319.929 210.212C320.053 215.736 314.018 216.919 312.429 222.212C310.328 229.212 341.04 249.212 339.429 256.712C337.818 264.212 319.922 269.712 315.429 280.212C310.936 290.712 308.074 300.733 312.429 312.712C314.374 318.062 322.923 320.37 319.929 325.212C313.436 335.711 312.429 333.211 300.929 341.711C297.418 344.307 293.907 333.518 290.929 336.711C283.936 344.211 284.436 346.711 280.929 352.711C274.473 363.757 305.703 350.828 312.429 361.711C318.92 372.213 314.42 388.713 310.92 384.713C302.945 375.599 298.92 379.721 292.92 383.713C276.957 394.333 280.929 400.713 275.436 408.211C263.719 424.207 242.596 407.137 243.429 419.711C244.92 442.213 266.795 469.575 266.92 477.713C267.42 510.213 275.436 502.639 266.92 511.213C256.987 521.213 250.26 527.604 246.42 531.213C241.914 535.448 251.42 521.711 255.92 514.213C257.628 507.471 249.362 506.713 244.92 506.713C230.42 513.213 238.411 540.713 232.92 542.211C227.429 543.709 222.547 549.651 220.92 547.211C215.92 539.713 223.967 539.282 213.92 524.211C210.92 519.711 207.42 506.213 195.92 494.711C186.64 485.43 174.82 491.15 165.42 494.711C156.02 498.272 126.106 508.27 117.42 503.211C111.411 499.711 102.911 494.711 104.42 479.711C105.52 468.774 105.885 465.711 107.929 451.711C108.505 447.765 97.5935 447.093 94.4292 441.211C92.7009 437.999 91.9117 435.859 91.9292 432.211C91.9522 427.389 96.4292 420.711 96.4292 420.711C96.4292 420.711 86.2409 415.698 86.9292 410.211C87.5915 404.931 88.3612 399.978 89.0953 395.711C90.5857 387.047 91.9292 381.211 91.9292 381.211C91.9292 381.211 83.976 373.182 73.9352 372.211C58.42 370.711 51.0707 360.211 53.4342 356.711C65.6957 338.553 73.6381 323.766 90.9434 291.546L91.9292 289.711C98.7539 277.005 103.419 276.123 90.4363 250.211C87.4312 244.213 90.2841 227.658 94.4292 215.212C104.42 185.211 116.025 169.847 130.92 153.711C142.92 140.711 158.92 132.71 180.42 123.211C201.92 113.711 226.678 108.938 255.92 89.7109Z"
        fill="#D9D9D9"
      />

      {PATH_COMP.map((path, index) => {
        const length = pathLengths[index] || 0;

        const draw = keyframes`
          from {
            stroke-dasharray: ${length};
            stroke-dashoffset: ${length};
          }
          to {
            stroke-dasharray: ${length};
            stroke-dashoffset: 0;
          }
        `;

        const pathAnimation = css`
          stroke-dasharray: ${length};
          stroke-dashoffset: ${length};
          animation: ${draw} 5s ease-in-out 2s forwards;
        `;

        const nullablePath = path as {
          d: string;
          fill?: string;
          stroke?: string;
          strokeWidth?: number | string;
        };

        return (
          <path
            key={index}
            ref={(el) => {
              if (el) {
                pathsRef.current[index] = el;
              }
            }}
            css={pathAnimation}
            {...nullablePath}
          />
        );
      })}

      {CIRCLES.map((circle, i) => (
        <circle
          key={i}
          cx={circle.cx}
          cy={circle.cy}
          r={circle.r}
          fill="white"
          css={getRandomBlinkStyle()}
        />
      ))}

      <defs>
        <linearGradient
          id="paint0_linear_3366_656"
          x1="317.42"
          y1="35.4999"
          x2="-29.5803"
          y2="626.5"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#80808C" />
          <stop offset="0.5" stopColor="#72727D" />
          <stop offset="1" stopColor="#232326" />
        </linearGradient>
      </defs>
    </svg>
  );
};

export default HomoDatarism;
